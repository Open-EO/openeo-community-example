{
  "process_graph": {
    "loadcollection1": {
      "process_id": "load_collection",
      "arguments": {
        "bands": [
          "VV"
        ],
        "id": "SENTINEL1_GAMMA0_SENTINELHUB",
        "properties": {
          "sat:orbit_state": {
            "process_graph": {
              "eq1": {
                "process_id": "eq",
                "arguments": {
                  "x": {
                    "from_parameter": "value"
                  },
                  "y": "ascending"
                },
                "result": true
              }
            }
          }
        },
        "spatial_extent": {
          "from_parameter": "aoi"
        },
        "temporal_extent": {
          "from_parameter": "After_date"
        }
      }
    },
    "reducedimension1": {
      "process_id": "reduce_dimension",
      "arguments": {
        "data": {
          "from_node": "loadcollection1"
        },
        "dimension": "t",
        "reducer": {
          "process_graph": {
            "mean1": {
              "process_id": "mean",
              "arguments": {
                "data": {
                  "from_parameter": "data"
                }
              },
              "result": true
            }
          }
        }
      }
    },
    "loadcollection2": {
      "process_id": "load_collection",
      "arguments": {
        "bands": [
          "VV"
        ],
        "id": "SENTINEL1_GAMMA0_SENTINELHUB",
        "properties": {
          "sat:orbit_state": {
            "process_graph": {
              "eq2": {
                "process_id": "eq",
                "arguments": {
                  "x": {
                    "from_parameter": "value"
                  },
                  "y": "ascending"
                },
                "result": true
              }
            }
          }
        },
        "spatial_extent": {
          "from_parameter": "aoi"
        },
        "temporal_extent": {
          "from_parameter": "Previous_date"
        }
      }
    },
    "reducedimension2": {
      "process_id": "reduce_dimension",
      "arguments": {
        "data": {
          "from_node": "loadcollection2"
        },
        "dimension": "t",
        "reducer": {
          "process_graph": {
            "mean2": {
              "process_id": "mean",
              "arguments": {
                "data": {
                  "from_parameter": "data"
                }
              },
              "result": true
            }
          }
        }
      }
    },
    "mergecubes1": {
      "process_id": "merge_cubes",
      "arguments": {
        "cube1": {
          "from_node": "reducedimension1"
        },
        "cube2": {
          "from_node": "reducedimension2"
        },
        "overlap_resolver": {
          "process_graph": {
            "divide1": {
              "process_id": "divide",
              "arguments": {
                "x": {
                  "from_parameter": "x"
                },
                "y": {
                  "from_parameter": "y"
                }
              },
              "result": true
            }
          }
        }
      }
    },
    "apply1": {
      "process_id": "apply",
      "arguments": {
        "data": {
          "from_node": "mergecubes1"
        },
        "process": {
          "process_graph": {
            "runudf1": {
              "process_id": "run_udf",
              "arguments": {
                "data": {
                  "from_parameter": "x"
                },
                "runtime": "Python",
                "udf": "\nfrom openeo.udf import XarrayDataCube\n\ndef apply_datacube(cube: XarrayDataCube, context: dict) -> XarrayDataCube:\n    array = cube.get_array()\n    \n    # UN defined difference threshold\n    array.values = np.where(array > 1.5, 1, 0)\n    return cube\n"
              },
              "result": true
            }
          }
        }
      },
      "result": true
    }
  }
}